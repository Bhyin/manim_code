# -*- encoding: utf-8 -*-
"""
PyCharm TracingCurve
2023/01/28

manimCE v0.17.2
python 3.10.9
"""

from manim import *
import numpy as np

config.renderer = RendererType.OPENGL


class TracingCurve(Scene):
    def __init__(self):
        super(TracingCurve, self).__init__()
        self.radius = 2
        self.dot_num = 4

    @staticmethod
    def polar2xyz(pho: float | int, theta: float | int) -> np.ndarray:
        """
        极坐标转直角坐标
        :param pho: 极径
        :param theta: 极角
        :return: 直角坐标
        """

        return pho * np.array([np.cos(theta), np.sin(theta), 0])

    @staticmethod
    def get_vector(dot: Dot, des: Dot) -> np.ndarray:
        """
        求以dot为起点,des为终点的向量
        :param dot: 起点
        :param des: 终点
        :return: 向量
        """
        return des.get_center() - dot.get_center()

    def modify_index(self, idx):
        """
        为了防止下标越界,做一个修正函数
        :param idx: 原始下标
        :return: 修正的下标
        """

        return (idx + self.dot_num) % self.dot_num

    def construct(self):
        dots = [Dot(point=self.polar2xyz(self.radius, TAU * (1 / 4 + i / self.dot_num)))
                for i in range(self.dot_num)]

        lines = [Line(start=dots[self.modify_index(i + 1)], end=dots[self.modify_index(i)])
                 for i in range(self.dot_num)]

        trace = VGroup()

        for i in range(self.dot_num):
            dot, des = dots[i], dots[self.modify_index(i + 1)]

            dot.add_updater(
                lambda m, dt, d=des: m.shift(dt * self.get_vector(m, d))
            )

            lines[i].add_updater(
                lambda m, start=dot, end=des: m.put_start_and_end_on(
                    start.get_center(), end.get_center()
                )
            )

        trace.add_updater(
            lambda m, dt, lines_=tuple(lines): m.add(
                *[line.copy().clear_updaters().set_stroke(width=1) for line in lines_]
            )
        )

        trace.add(*dots, *lines)

        self.add(trace)
        self.wait(5)
